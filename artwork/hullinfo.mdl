use "loadoutdata";
use "font";

//////////////////////////////////////////////////////////////////////////////
//
// These value are imported into the exe
//
//////////////////////////////////////////////////////////////////////////////

maxHullMaxSpeed     =   180;
maxHullAcceleration =    32;
maxHullTurnRate     =    60;
maxHullHitPoints    =  6000;
maxHullMaxEnergy    =  2400;
maxHullScanRange    =  7200;
maxHullSignature    =     2;
maxHullMass         =    50;

//////////////////////////////////////////////////////////////////////////////
//
// Hull Description images
//
//////////////////////////////////////////////////////////////////////////////

//
// Values shared between all of the hull descriptions
//

width  = 260;
height = -110;
color  = Color(1, 1, 1);
point1 = Point(0, 0);

//
// If a specific hull image isn't found the default will be used
//

hullDefault = StringImage(JustifyLeft, width, medVerdana, color, hullDescriptionString);

//////////////////////////////////////////////////////////////////////////////
//
// Put all of the individual hull images together
//
//////////////////////////////////////////////////////////////////////////////

hullDescriptionPosition = Point(212, 118);

hullDescriptionImage =
    hullDefault;
    /*
    SwitchImage(
        hullID,
        hullDefault,
        [
        ]
    );
    */

hullDescriptionPane =
    AnimatedImagePaneRect(
        hullDescriptionImage,
        Rect(0, height, width, 0)
    );

//////////////////////////////////////////////////////////////////////////////
//
//  Ship Cost and Your Current Money
//
//////////////////////////////////////////////////////////////////////////////


// if the player's current ship costs money, show its value with their money

moneyString = 
    SwitchString(
        oldShipCost,
        ConcatinatedString(ConcatinatedString(ConcatinatedString(NumberString(money), " (+ "), NumberString(oldShipCost)), ")"),
        [
            (0, NumberString(money))
        ]
    );

costString =
    SwitchString(
        newShipCost,
        ConcatinatedString(ConcatinatedString("Money: ", ConcatinatedString(moneyString, " credits, Price: ")), NumberString(newShipCost)),
        [
	        (0, ConcatinatedString("Money: ", ConcatinatedString(moneyString, " credits")))
        ]
    );

creditsImage = StringImage(JustifyLeft, 150, medBoldVerdana, color, costString);
creditsPane  = AnimatedImagePaneRect(creditsImage, Rect(0, -35, 150, 0));

creditsPosition = Point(482, 262);

//////////////////////////////////////////////////////////////////////////////
//
// Hull Info Pane
//
//////////////////////////////////////////////////////////////////////////////

gaugeBmp = ImportImage("loadoutgaugenowbmp", false);
gaugeBmpBase = ImportImage("loadoutgaugebasebmp", false);

textRow1 = -31;
textRow2 = -53;
textRow3 = -76;
textRow4 = -98;

numberColumn1 = 112;
numberColumn2 = 295;

gaugeColumn1 =  70;
gaugeColumn2 = 252;

gaugeRow1 = -37;
gaugeRow2 = -59;
gaugeRow3 = -82;
gaugeRow4 = -104;
gauge2Row1 = -42;
gauge2Row2 = -64;
gauge2Row3 = -87;
gauge2Row4 = -109;

DefenseClassString = 
	SwitchString(
        hullDefenseClassNumber,
        "NA",
        [
            (0, "Asteroid"),
			(1, "Light"),
			(2, "Medium"),
			(3, "Heavy"),
			(4, "Super Heavy"),
			(5, "Utility"),
			(6, "Light Base"),
			(7, "Heavy Base"),
			(8, "Ship Shield"),
			(9, "Base Shield")
        ]
    );


hullInfoImage =
    GroupImage(
        [	
            //TranslateImage(StringImage(JustifyLeft,  50, smVerdana, color, NumberString(hullMaxSpeedNumber		)), Point(75,   0)),
			//TranslateImage(StringImage(JustifyLeft,  50, smVerdana, color, NumberString(hullAccelerationNumber   )), Point(75, -21)),
            //TranslateImage(StringImage(JustifyLeft,  50, smVerdana, color, NumberString(hullTurnRateNumber		)), Point(75, -42)),
			//TranslateImage(StringImage(JustifyLeft,  50, smVerdana, color, NumberString(hullHitPointsNumber		)), Point(75, -63)),
			//TranslateImage(StringImage(JustifyLeft,  50, smVerdana, color, NumberString(hullMaxEnergyNumber		)), Point(75, -84)),
			//TranslateImage(StringImage(JustifyLeft,  50, smVerdana, color, NumberString(hullScanRangeNumber		)), Point(75, -105)),
			//TranslateImage(StringImage(JustifyLeft,  50, smVerdana, color, NumberString(hullSignatureNumber		)), Point(75, -126)),
			//TranslateImage(StringImage(JustifyLeft,  50, smVerdana, color, NumberString(hullDefenseClassNumber			)), Point(75, -147)),
			
			TranslateImage(StringImage(JustifyRight,  50, medVerdana, color, NumberString(hullMaxSpeedNumber			)), Point(numberColumn1,  textRow1)),
			TranslateImage(StringImage(JustifyRight,  50, medVerdana, color, NumberString(hullAccelerationNumber		)), Point(numberColumn1,  textRow2)),
            TranslateImage(StringImage(JustifyRight,  50, medVerdana, color, NumberString(hullTurnRateNumber			)), Point(numberColumn1,  textRow3)),
			TranslateImage(StringImage(JustifyRight,  50, medVerdana, color, NumberString(hullHitPointsNumber		)),	Point(numberColumn1,  textRow4)),
			TranslateImage(StringImage(JustifyRight,  50, medVerdana, color, NumberString(hullMaxEnergyNumber		)),	Point(numberColumn2,  textRow1)),
			TranslateImage(StringImage(JustifyRight,  50, medVerdana, color, NumberString(hullScanRangeNumber		)),	Point(numberColumn2,  textRow2)),
			TranslateImage(StringImage(JustifyRight,  50, medVerdana, color, NumberString(hullSignatureNumber		)),	Point(numberColumn2,  textRow3)),
			TranslateImage(StringImage(JustifyRight,  50, medVerdana, color, DefenseClassString), Point(numberColumn2,  textRow4)),


			TranslateImage(GaugeImage(JustifyLeft, gaugeBmp, hullMaxSpeed    ), Point(gaugeColumn1,  gaugeRow1)),
            TranslateImage(GaugeImage(JustifyLeft, gaugeBmp, hullAcceleration), Point(gaugeColumn1,  gaugeRow2)),
            TranslateImage(GaugeImage(JustifyLeft, gaugeBmp, hullTurnRate    ), Point(gaugeColumn1,  gaugeRow3)),
            TranslateImage(GaugeImage(JustifyLeft, gaugeBmp, hullHitPoints   ), Point(gaugeColumn1,  gaugeRow4)),
            TranslateImage(GaugeImage(JustifyLeft, gaugeBmp, hullMaxEnergy   ), Point(gaugeColumn2,  gaugeRow1)),
            TranslateImage(GaugeImage(JustifyLeft, gaugeBmp, hullScanRange   ), Point(gaugeColumn2,  gaugeRow2)),
            TranslateImage(GaugeImage(JustifyLeft, gaugeBmp, hullSignature   ), Point(gaugeColumn2,  gaugeRow3)),
            //TranslateImage(GaugeImage(JustifyLeft, gaugeBmp, hullMass        ), Point(gaugeColumn2,  gaugeRow4)),

			TranslateImage(GaugeImage(JustifyLeft, gaugeBmpBase, baseHullMaxSpeed    ), Point(gaugeColumn1,  gauge2Row1)),
            TranslateImage(GaugeImage(JustifyLeft, gaugeBmpBase, baseHullAcceleration), Point(gaugeColumn1,  gauge2Row2)),
            TranslateImage(GaugeImage(JustifyLeft, gaugeBmpBase, baseHullTurnRate    ), Point(gaugeColumn1,  gauge2Row3)),
            TranslateImage(GaugeImage(JustifyLeft, gaugeBmpBase, baseHullHitPoints   ), Point(gaugeColumn1,  gauge2Row4)),
            TranslateImage(GaugeImage(JustifyLeft, gaugeBmpBase, baseHullMaxEnergy   ), Point(gaugeColumn2,  gauge2Row1)),
            TranslateImage(GaugeImage(JustifyLeft, gaugeBmpBase, baseHullScanRange   ), Point(gaugeColumn2,  gauge2Row2)),
            TranslateImage(GaugeImage(JustifyLeft, gaugeBmpBase, baseHullSignature   ), Point(gaugeColumn2,  gauge2Row3)),
            //TranslateImage(GaugeImage(JustifyLeft, gaugeBmpBase, baseHullMass       ),	Point(gaugeColumn2,  gauge2Row4)),
            TranslateImage(civHullImage, Point(0, -114))
        ]
    );

hullInfoPosition = Point(225, 350);
hullInfoPane     = AnimatedImagePaneRect(hullInfoImage, Rect(0, -120, 378, 0)); // KG fix for DX9 - old value= Rect(0, -96, 278, 0)
